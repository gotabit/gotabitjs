import type { NextPage } from 'next'
import Head from 'next/head'
import { GotaBit } from 'gotabit'
import { useState } from 'react'

const Home: NextPage = () => {
  const [gotabit, setGotabit] = useState<GotaBit>()
  const [result, setResult] = useState<string>()
  const [account, setAccount] = useState<string>()

  const connectWallet = async (walletType: any, chain: any = 'main') => {
    try {
      setResult('Loading...')
      const gotabit = await GotaBit.init(chain, walletType);
      setGotabit(gotabit)

      setResult(gotabit.config.chainId)

    } catch (error) {

      console.error(error);
    }
  }

  const getAccounts = async () => {
    if (!gotabit || !gotabit.wallet) return
    try {
      setAccount('loading...')

      let [{ address, algo, pubkey }] = await gotabit.wallet.getAccounts();

      const _pubkey = Buffer.from(pubkey).toString("hex")

      setAccount("address: " + address + "<br>algo: " + algo + "<br>pubkey: " + _pubkey);
    } catch (error) {
      console.error(error);
      setAccount(JSON.stringify(error))
    }
  }

  return (
    <div>
      <Head>
        <title>Gotabit JS SDK exmaples.</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <section>
          <h1>Gotabit JS SDK exmaples.</h1>
          <h2>For Ledger</h2>
          <ol>
            <li>Connect the Ledger device via USB</li>
            <li>Open the Cosmos app on the Ledger device</li>
            <li>Click the buttons below</li>
          </ol>
          <button
            onClick={() => connectWallet({
              type: 'ledger',
            })}
          >
            ledgerConnect
          </button>

          <h2>For Keplr</h2>
          <ol>
            <li>Click the buttons below</li>
          </ol>
          <button
            onClick={() => connectWallet({
              type: 'keplr',
            })}
          >
            KeplrConnect
          </button>
          <button
            onClick={() => connectWallet({
              type: 'walletconnect',
              walletconnectParams: {
                signOpts: {
                  logger: 'debug',
                  relayUrl: 'wss:\/\/relay.gotabit.dev',
                  projectId: '2c921904d8ebc91517cd11c1cc4a267f',
                  metadata: {
                    name: 'Gotabit SDK WalletConnect test',
                    description: 'Gotabit SDK WalletConnect test',
                    url: 'https:\/\/sdk.gotabit.dev',
                    icons: [`https:\/\/res.gotabit.io\/svg\/icon.svg`],
                  },
                }
              }
            }, 'test')}
          >
            Walletconnect
          </button>
          <hr />
              <div id="connect">Connect Result:{ result}</div>
          <hr />
          <h2>Accounts</h2>
          <button onClick={() => getAccounts()}>Get Accounts</button>
          <div id="accounts">{ account}</div>
        </section>
      </main>

      
    </div>
  )
}

export default Home
